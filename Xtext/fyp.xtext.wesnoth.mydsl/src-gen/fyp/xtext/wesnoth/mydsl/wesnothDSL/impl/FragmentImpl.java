/**
 * generated by Xtext 2.20.0
 */
package fyp.xtext.wesnoth.mydsl.wesnothDSL.impl;

import fyp.xtext.wesnoth.mydsl.wesnothDSL.Conditional;
import fyp.xtext.wesnoth.mydsl.wesnothDSL.Defualt_CA;
import fyp.xtext.wesnoth.mydsl.wesnothDSL.Fragment;
import fyp.xtext.wesnoth.mydsl.wesnothDSL.WesnothDSLPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Fragment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fyp.xtext.wesnoth.mydsl.wesnothDSL.impl.FragmentImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link fyp.xtext.wesnoth.mydsl.wesnothDSL.impl.FragmentImpl#getDefualt_cas <em>Defualt cas</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FragmentImpl extends MinimalEObjectImpl.Container implements Fragment
{
  /**
   * The cached value of the '{@link #getCondition() <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected Conditional condition;

  /**
   * The cached value of the '{@link #getDefualt_cas() <em>Defualt cas</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefualt_cas()
   * @generated
   * @ordered
   */
  protected EList<Defualt_CA> defualt_cas;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FragmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WesnothDSLPackage.Literals.FRAGMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Conditional getCondition()
  {
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCondition(Conditional newCondition, NotificationChain msgs)
  {
    Conditional oldCondition = condition;
    condition = newCondition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WesnothDSLPackage.FRAGMENT__CONDITION, oldCondition, newCondition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCondition(Conditional newCondition)
  {
    if (newCondition != condition)
    {
      NotificationChain msgs = null;
      if (condition != null)
        msgs = ((InternalEObject)condition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WesnothDSLPackage.FRAGMENT__CONDITION, null, msgs);
      if (newCondition != null)
        msgs = ((InternalEObject)newCondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WesnothDSLPackage.FRAGMENT__CONDITION, null, msgs);
      msgs = basicSetCondition(newCondition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WesnothDSLPackage.FRAGMENT__CONDITION, newCondition, newCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Defualt_CA> getDefualt_cas()
  {
    if (defualt_cas == null)
    {
      defualt_cas = new EObjectContainmentEList<Defualt_CA>(Defualt_CA.class, this, WesnothDSLPackage.FRAGMENT__DEFUALT_CAS);
    }
    return defualt_cas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WesnothDSLPackage.FRAGMENT__CONDITION:
        return basicSetCondition(null, msgs);
      case WesnothDSLPackage.FRAGMENT__DEFUALT_CAS:
        return ((InternalEList<?>)getDefualt_cas()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WesnothDSLPackage.FRAGMENT__CONDITION:
        return getCondition();
      case WesnothDSLPackage.FRAGMENT__DEFUALT_CAS:
        return getDefualt_cas();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WesnothDSLPackage.FRAGMENT__CONDITION:
        setCondition((Conditional)newValue);
        return;
      case WesnothDSLPackage.FRAGMENT__DEFUALT_CAS:
        getDefualt_cas().clear();
        getDefualt_cas().addAll((Collection<? extends Defualt_CA>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WesnothDSLPackage.FRAGMENT__CONDITION:
        setCondition((Conditional)null);
        return;
      case WesnothDSLPackage.FRAGMENT__DEFUALT_CAS:
        getDefualt_cas().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WesnothDSLPackage.FRAGMENT__CONDITION:
        return condition != null;
      case WesnothDSLPackage.FRAGMENT__DEFUALT_CAS:
        return defualt_cas != null && !defualt_cas.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //FragmentImpl
