/**
 * generated by Xtext 2.20.0
 */
package fyp.xtext.wesnoth.mydsl.wesnothDSL.impl;

import fyp.xtext.wesnoth.mydsl.wesnothDSL.Rule;
import fyp.xtext.wesnoth.mydsl.wesnothDSL.UnitID;
import fyp.xtext.wesnoth.mydsl.wesnothDSL.WesnothDSLPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rule</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fyp.xtext.wesnoth.mydsl.wesnothDSL.impl.RuleImpl#getName <em>Name</em>}</li>
 *   <li>{@link fyp.xtext.wesnoth.mydsl.wesnothDSL.impl.RuleImpl#getUnitID <em>Unit ID</em>}</li>
 *   <li>{@link fyp.xtext.wesnoth.mydsl.wesnothDSL.impl.RuleImpl#getBehaviours <em>Behaviours</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RuleImpl extends MinimalEObjectImpl.Container implements Rule
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getUnitID() <em>Unit ID</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnitID()
   * @generated
   * @ordered
   */
  protected UnitID unitID;

  /**
   * The cached value of the '{@link #getBehaviours() <em>Behaviours</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBehaviours()
   * @generated
   * @ordered
   */
  protected EList<String> behaviours;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RuleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WesnothDSLPackage.Literals.RULE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WesnothDSLPackage.RULE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UnitID getUnitID()
  {
    return unitID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUnitID(UnitID newUnitID, NotificationChain msgs)
  {
    UnitID oldUnitID = unitID;
    unitID = newUnitID;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WesnothDSLPackage.RULE__UNIT_ID, oldUnitID, newUnitID);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUnitID(UnitID newUnitID)
  {
    if (newUnitID != unitID)
    {
      NotificationChain msgs = null;
      if (unitID != null)
        msgs = ((InternalEObject)unitID).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WesnothDSLPackage.RULE__UNIT_ID, null, msgs);
      if (newUnitID != null)
        msgs = ((InternalEObject)newUnitID).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WesnothDSLPackage.RULE__UNIT_ID, null, msgs);
      msgs = basicSetUnitID(newUnitID, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WesnothDSLPackage.RULE__UNIT_ID, newUnitID, newUnitID));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getBehaviours()
  {
    if (behaviours == null)
    {
      behaviours = new EDataTypeEList<String>(String.class, this, WesnothDSLPackage.RULE__BEHAVIOURS);
    }
    return behaviours;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WesnothDSLPackage.RULE__UNIT_ID:
        return basicSetUnitID(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WesnothDSLPackage.RULE__NAME:
        return getName();
      case WesnothDSLPackage.RULE__UNIT_ID:
        return getUnitID();
      case WesnothDSLPackage.RULE__BEHAVIOURS:
        return getBehaviours();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WesnothDSLPackage.RULE__NAME:
        setName((String)newValue);
        return;
      case WesnothDSLPackage.RULE__UNIT_ID:
        setUnitID((UnitID)newValue);
        return;
      case WesnothDSLPackage.RULE__BEHAVIOURS:
        getBehaviours().clear();
        getBehaviours().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WesnothDSLPackage.RULE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case WesnothDSLPackage.RULE__UNIT_ID:
        setUnitID((UnitID)null);
        return;
      case WesnothDSLPackage.RULE__BEHAVIOURS:
        getBehaviours().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WesnothDSLPackage.RULE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case WesnothDSLPackage.RULE__UNIT_ID:
        return unitID != null;
      case WesnothDSLPackage.RULE__BEHAVIOURS:
        return behaviours != null && !behaviours.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", behaviours: ");
    result.append(behaviours);
    result.append(')');
    return result.toString();
  }

} //RuleImpl
