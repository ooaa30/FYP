/*
 * generated by Xtext 2.20.0
 */
grammar InternalWesnothDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fyp.xtext.wesnoth.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fyp.xtext.wesnoth.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fyp.xtext.wesnoth.mydsl.services.WesnothDSLGrammarAccess;

}
@parser::members {
	private WesnothDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(WesnothDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitID
entryRuleUnitID
:
{ before(grammarAccess.getUnitIDRule()); }
	 ruleUnitID
{ after(grammarAccess.getUnitIDRule()); } 
	 EOF 
;

// Rule UnitID
ruleUnitID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitIDAccess().getGroup()); }
		(rule__UnitID__Group__0)
		{ after(grammarAccess.getUnitIDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefualt_CA
entryRuleDefualt_CA
:
{ before(grammarAccess.getDefualt_CARule()); }
	 ruleDefualt_CA
{ after(grammarAccess.getDefualt_CARule()); } 
	 EOF 
;

// Rule Defualt_CA
ruleDefualt_CA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefualt_CAAccess().getCaTypeAssignment()); }
		(rule__Defualt_CA__CaTypeAssignment)
		{ after(grammarAccess.getDefualt_CAAccess().getCaTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Defualt_CA__CaTypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefualt_CAAccess().getCaTypeMovementKeyword_0_0()); }
		'movement'
		{ after(grammarAccess.getDefualt_CAAccess().getCaTypeMovementKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefualt_CAAccess().getCaTypeRetreatKeyword_0_1()); }
		'retreat'
		{ after(grammarAccess.getDefualt_CAAccess().getCaTypeRetreatKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDefualt_CAAccess().getCaTypeMove_to_targetKeyword_0_2()); }
		'move_to_target'
		{ after(grammarAccess.getDefualt_CAAccess().getCaTypeMove_to_targetKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getDefualt_CAAccess().getCaTypeCombatKeyword_0_3()); }
		'combat'
		{ after(grammarAccess.getDefualt_CAAccess().getCaTypeCombatKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getDefualt_CAAccess().getCaTypeRecruitKeyword_0_4()); }
		'recruit'
		{ after(grammarAccess.getDefualt_CAAccess().getCaTypeRecruitKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getDefualt_CAAccess().getCaTypeFocus_high_XPKeyword_0_5()); }
		'focus_high_XP'
		{ after(grammarAccess.getDefualt_CAAccess().getCaTypeFocus_high_XPKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getDefualt_CAAccess().getCaTypeMove_to_enemyKeyword_0_6()); }
		'move_to_enemy'
		{ after(grammarAccess.getDefualt_CAAccess().getCaTypeMove_to_enemyKeyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getDefualt_CAAccess().getCaTypeCapture_villagesKeyword_0_7()); }
		'capture_villages'
		{ after(grammarAccess.getDefualt_CAAccess().getCaTypeCapture_villagesKeyword_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
	(rule__Rule__NameAssignment_1)
	{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getUnitIDAssignment_3()); }
	(rule__Rule__UnitIDAssignment_3)
	{ after(grammarAccess.getRuleAccess().getUnitIDAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getDefualt_casAssignment_4()); }
	(rule__Rule__Defualt_casAssignment_4)*
	{ after(grammarAccess.getRuleAccess().getDefualt_casAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitID__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitID__Group__0__Impl
	rule__UnitID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitID__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitIDAccess().getUnitIDKeyword_0()); }
	'unitID'
	{ after(grammarAccess.getUnitIDAccess().getUnitIDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitID__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitID__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitIDAccess().getNameAssignment_1()); }
	(rule__UnitID__NameAssignment_1)
	{ after(grammarAccess.getUnitIDAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsRuleParserRuleCall_0()); }
		ruleRule
		{ after(grammarAccess.getModelAccess().getElementsRuleParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__UnitIDAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getUnitIDUnitIDParserRuleCall_3_0()); }
		ruleUnitID
		{ after(grammarAccess.getRuleAccess().getUnitIDUnitIDParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Defualt_casAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getDefualt_casDefualt_CAParserRuleCall_4_0()); }
		ruleDefualt_CA
		{ after(grammarAccess.getRuleAccess().getDefualt_casDefualt_CAParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitID__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitIDAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUnitIDAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Defualt_CA__CaTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefualt_CAAccess().getCaTypeAlternatives_0()); }
		(rule__Defualt_CA__CaTypeAlternatives_0)
		{ after(grammarAccess.getDefualt_CAAccess().getCaTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
